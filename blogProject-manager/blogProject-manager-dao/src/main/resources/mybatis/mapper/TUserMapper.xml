<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blogProject.manager.dao.TUserMapper">
  <resultMap id="BaseResultMap" type="blogProject.manager.bean.TUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_longinacct" jdbcType="VARCHAR" property="userLonginacct" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_permission" jdbcType="INTEGER" property="userPermission" />
    <result column="follow_num" jdbcType="INTEGER" property="followNum" />
    <result column="followed_num" jdbcType="INTEGER" property="followedNum" />
    <result column="regist_state" jdbcType="INTEGER" property="registState" />
    <result column="regist_code" jdbcType="VARCHAR" property="registCode" />
    <result column="regist_email_url" jdbcType="VARCHAR" property="registEmailUrl" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="password_retrieve_url" jdbcType="VARCHAR" property="passwordRetrieveUrl" />
    <result column="regist_date" jdbcType="DATE" property="registDate" />
    <result column="article_num" jdbcType="INTEGER" property="articleNum" />
    <result column="user_self_introduction" jdbcType="VARCHAR" property="userSelfIntroduction" />
    <result column="user_getlike" jdbcType="INTEGER" property="userGetlike" />
    <result column="user_writenum" jdbcType="INTEGER" property="userWritenum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_longinacct, user_name, user_email, user_phone, user_permission, follow_num, 
    followed_num, regist_state, regist_code, regist_email_url, user_password, password_retrieve_url, 
    regist_date, article_num, user_self_introduction, user_getlike, user_writenum
  </sql>
  <select id="selectByExample" parameterType="blogProject.manager.bean.TUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="blogProject.manager.bean.TUserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="blogProject.manager.bean.TUser">
    insert into t_user (id, user_longinacct, user_name, 
      user_email, user_phone, user_permission, 
      follow_num, followed_num, regist_state, 
      regist_code, regist_email_url, user_password, 
      password_retrieve_url, regist_date, article_num, 
      user_self_introduction, user_getlike, user_writenum
      )
    values (#{id,jdbcType=INTEGER}, #{userLonginacct,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userPermission,jdbcType=INTEGER}, 
      #{followNum,jdbcType=INTEGER}, #{followedNum,jdbcType=INTEGER}, #{registState,jdbcType=INTEGER}, 
      #{registCode,jdbcType=VARCHAR}, #{registEmailUrl,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{passwordRetrieveUrl,jdbcType=VARCHAR}, #{registDate,jdbcType=DATE}, #{articleNum,jdbcType=INTEGER}, 
      #{userSelfIntroduction,jdbcType=VARCHAR}, #{userGetlike,jdbcType=INTEGER}, #{userWritenum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="blogProject.manager.bean.TUser">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userLonginacct != null">
        user_longinacct,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userPermission != null">
        user_permission,
      </if>
      <if test="followNum != null">
        follow_num,
      </if>
      <if test="followedNum != null">
        followed_num,
      </if>
      <if test="registState != null">
        regist_state,
      </if>
      <if test="registCode != null">
        regist_code,
      </if>
      <if test="registEmailUrl != null">
        regist_email_url,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="passwordRetrieveUrl != null">
        password_retrieve_url,
      </if>
      <if test="registDate != null">
        regist_date,
      </if>
      <if test="articleNum != null">
        article_num,
      </if>
      <if test="userSelfIntroduction != null">
        user_self_introduction,
      </if>
      <if test="userGetlike != null">
        user_getlike,
      </if>
      <if test="userWritenum != null">
        user_writenum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userLonginacct != null">
        #{userLonginacct,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userPermission != null">
        #{userPermission,jdbcType=INTEGER},
      </if>
      <if test="followNum != null">
        #{followNum,jdbcType=INTEGER},
      </if>
      <if test="followedNum != null">
        #{followedNum,jdbcType=INTEGER},
      </if>
      <if test="registState != null">
        #{registState,jdbcType=INTEGER},
      </if>
      <if test="registCode != null">
        #{registCode,jdbcType=VARCHAR},
      </if>
      <if test="registEmailUrl != null">
        #{registEmailUrl,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="passwordRetrieveUrl != null">
        #{passwordRetrieveUrl,jdbcType=VARCHAR},
      </if>
      <if test="registDate != null">
        #{registDate,jdbcType=DATE},
      </if>
      <if test="articleNum != null">
        #{articleNum,jdbcType=INTEGER},
      </if>
      <if test="userSelfIntroduction != null">
        #{userSelfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="userGetlike != null">
        #{userGetlike,jdbcType=INTEGER},
      </if>
      <if test="userWritenum != null">
        #{userWritenum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="blogProject.manager.bean.TUserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userLonginacct != null">
        user_longinacct = #{record.userLonginacct,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userPermission != null">
        user_permission = #{record.userPermission,jdbcType=INTEGER},
      </if>
      <if test="record.followNum != null">
        follow_num = #{record.followNum,jdbcType=INTEGER},
      </if>
      <if test="record.followedNum != null">
        followed_num = #{record.followedNum,jdbcType=INTEGER},
      </if>
      <if test="record.registState != null">
        regist_state = #{record.registState,jdbcType=INTEGER},
      </if>
      <if test="record.registCode != null">
        regist_code = #{record.registCode,jdbcType=VARCHAR},
      </if>
      <if test="record.registEmailUrl != null">
        regist_email_url = #{record.registEmailUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordRetrieveUrl != null">
        password_retrieve_url = #{record.passwordRetrieveUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.registDate != null">
        regist_date = #{record.registDate,jdbcType=DATE},
      </if>
      <if test="record.articleNum != null">
        article_num = #{record.articleNum,jdbcType=INTEGER},
      </if>
      <if test="record.userSelfIntroduction != null">
        user_self_introduction = #{record.userSelfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="record.userGetlike != null">
        user_getlike = #{record.userGetlike,jdbcType=INTEGER},
      </if>
      <if test="record.userWritenum != null">
        user_writenum = #{record.userWritenum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=INTEGER},
      user_longinacct = #{record.userLonginacct,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_permission = #{record.userPermission,jdbcType=INTEGER},
      follow_num = #{record.followNum,jdbcType=INTEGER},
      followed_num = #{record.followedNum,jdbcType=INTEGER},
      regist_state = #{record.registState,jdbcType=INTEGER},
      regist_code = #{record.registCode,jdbcType=VARCHAR},
      regist_email_url = #{record.registEmailUrl,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      password_retrieve_url = #{record.passwordRetrieveUrl,jdbcType=VARCHAR},
      regist_date = #{record.registDate,jdbcType=DATE},
      article_num = #{record.articleNum,jdbcType=INTEGER},
      user_self_introduction = #{record.userSelfIntroduction,jdbcType=VARCHAR},
      user_getlike = #{record.userGetlike,jdbcType=INTEGER},
      user_writenum = #{record.userWritenum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="blogProject.manager.bean.TUser">
    update t_user
    <set>
      <if test="userLonginacct != null">
        user_longinacct = #{userLonginacct,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userPermission != null">
        user_permission = #{userPermission,jdbcType=INTEGER},
      </if>
      <if test="followNum != null">
        follow_num = #{followNum,jdbcType=INTEGER},
      </if>
      <if test="followedNum != null">
        followed_num = #{followedNum,jdbcType=INTEGER},
      </if>
      <if test="registState != null">
        regist_state = #{registState,jdbcType=INTEGER},
      </if>
      <if test="registCode != null">
        regist_code = #{registCode,jdbcType=VARCHAR},
      </if>
      <if test="registEmailUrl != null">
        regist_email_url = #{registEmailUrl,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="passwordRetrieveUrl != null">
        password_retrieve_url = #{passwordRetrieveUrl,jdbcType=VARCHAR},
      </if>
      <if test="registDate != null">
        regist_date = #{registDate,jdbcType=DATE},
      </if>
      <if test="articleNum != null">
        article_num = #{articleNum,jdbcType=INTEGER},
      </if>
      <if test="userSelfIntroduction != null">
        user_self_introduction = #{userSelfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="userGetlike != null">
        user_getlike = #{userGetlike,jdbcType=INTEGER},
      </if>
      <if test="userWritenum != null">
        user_writenum = #{userWritenum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="blogProject.manager.bean.TUser">
    update t_user
    set user_longinacct = #{userLonginacct,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_permission = #{userPermission,jdbcType=INTEGER},
      follow_num = #{followNum,jdbcType=INTEGER},
      followed_num = #{followedNum,jdbcType=INTEGER},
      regist_state = #{registState,jdbcType=INTEGER},
      regist_code = #{registCode,jdbcType=VARCHAR},
      regist_email_url = #{registEmailUrl,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      password_retrieve_url = #{passwordRetrieveUrl,jdbcType=VARCHAR},
      regist_date = #{registDate,jdbcType=DATE},
      article_num = #{articleNum,jdbcType=INTEGER},
      user_self_introduction = #{userSelfIntroduction,jdbcType=VARCHAR},
      user_getlike = #{userGetlike,jdbcType=INTEGER},
      user_writenum = #{userWritenum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>